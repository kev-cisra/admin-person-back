generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model departamento {
  uuid      BigInt    @id @default(autoincrement())
  nombre    String    @db.VarChar(150)
  createdAt DateTime  @default(now())
  updatedAt DateTime
  deletedAt DateTime?
}

model personal {
  uuid            BigInt    @id @default(autoincrement())
  nombre          String    @db.VarChar(150)
  telefono        String?   @db.VarChar(50)
  fechaNacimiento DateTime?
  fechaIngreso    DateTime?
  usuarioId       BigInt?
  departamentoId  BigInt?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime
  deletedAt       DateTime?

  @@index([departamentoId], map: "Personal_departamentoId_fkey")
  @@index([usuarioId], map: "Personal_usuarioId_fkey")
}

model proyecto {
  uuid        BigInt    @id @default(autoincrement())
  nombre      String    @db.VarChar(150)
  fechaInicio DateTime?
  fechaFin    DateTime?
  estatus     String?   @db.VarChar(150)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime
  deletedAt   DateTime?
}

model proyectopersonal {
  uuid       BigInt    @id @default(autoincrement())
  avance     Int?
  estatus    String?   @db.VarChar(150)
  proyectoId BigInt
  personalId BigInt
  createdAt  DateTime  @default(now())
  updatedAt  DateTime
  deletedAt  DateTime?

  @@unique([proyectoId, personalId], map: "ProyectoPersonal_proyectoId_personalId_key")
  @@index([personalId], map: "ProyectoPersonal_personalId_fkey")
}

model usuario {
  uuid      BigInt    @id @default(autoincrement())
  email     String    @unique(map: "Usuario_email_key") @db.VarChar(80)
  password  String    @db.VarChar(80)
  nombre    String?   @db.VarChar(150)
  createdAt DateTime  @default(now())
  updatedAt DateTime
  deletedAt DateTime?

  tokens    token[]
}

enum TokenType {
  api
  refresh
  reset_password
  verify_email
  magic_login
  session
  oauth_access
}

model token {
  uuid       BigInt    @id @default(autoincrement())
  secretHash String    @db.VarChar(255)
  type       TokenType @default(session)
  revokedAt  DateTime?
  expiresAt  DateTime
  deviceId   String?   @db.VarChar(255)
  usuarioId  BigInt
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  usuario usuario @relation(fields: [usuarioId], references: [uuid])

  @@index([usuarioId], map: "Token_usuarioId_fkey")
}
